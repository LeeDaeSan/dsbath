<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dsbath.admin.model.mapper.AdminMapper">

	<!-- 관리자 로그인 조회 -->
	<select id="selectOfLogin" parameterType="admin" resultType="admin">
		SELECT
			*
		  FROM Admin
		 WHERE AdminId = #{adminId}
	</select>
	
	<!-- 관리자 비밀번호 update -->
	<select id="updateOfPassword" parameterType="admin">
		UPDATE Admin
		   SET
			   	Password = #{password}
		   	
		 WHERE AdminId = #{adminId}
	</select>
	
	<!-- 관리자 아이디 중복확인 -->
	<select id="adminIdChecked" parameterType="admin" resultType="admin">
		SELECT
			AdminId
		  FROM Admin
		 WHERE AdminId = #{adminId}
	</select>
	
	<!-- 관리자 등록 -->
	<insert id="insert" parameterType="admin">
		INSERT INTO Admin
		(
			AdminName,
			AdminId,
			Password,
			ZipCode,
			Address,
			AddressDetail,
			Role
		)
		VALUES
		(
			#{adminName},
			#{adminId},
			#{password},
			#{zipCode},
			#{address},
			#{addressDetail},
			#{role}
		)
	</insert>
	
	<!-- 관리자 수정 -->
	<update id="update" parameterType="admin">
		UPDATE Admin
		   SET
			   	<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(password)'>
			   		Password = #{password},
			   	</if>
			   	
		   		AdminName 		= #{adminName},
		   		ZipCode			= #{zipCode},
		   		Address			= #{address},
		   		AddressDetail 	= #{addressDetail}
		   		
		 WHERE AdminIdx = #{adminIdx}
	</update>
	
	<!-- 관리자 삭제 -->
	<delete id="delete" parameterType="admin">
		DELETE FROM Admin
		 WHERE AdminIdx = #{adminIdx}
	</delete>
	
	<!-- 관리자 상세 -->
	<select id="detail" parameterType="admin" resultType="admin">
		SELECT
			AdminIdx,
			AdminName,
			AdminId,
			ZipCode,
			Address,
			AddressDetail,
			Role,
			CreateDate
		
		  FROM Admin
		 WHERE AdminIdx = #{adminIdx}
	</select>
	
	<!-- 관리자 목록 조회 -->
	<select id="select" parameterType="com.dsbath.admin.model.dto.PagingDTO" resultType="admin">
		SELECT
			AdminIdx,
			AdminName,
			AdminId,
			ZipCode,
			Address,
			AddressDetail,
			Role,
			CreateDate,
			UpdateDate
			
		  FROM Admin
		 
		<!-- 공통 조건 -->
		<include refid="selectOfWhere"></include>
		 
		<!-- order -->
		<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(sort) and @com.dsbath.admin.etc.util.StringUtil@isNotEmpty(sortType)'>
		 	ORDER BY 
		 	
			<choose>
			 	<when test='"adminId".equals(sortType)'>
			 		AdminId
				</when>
			 	<when test='"adminName".equals(sortType)'>
			 		AdminName
				</when>
			 	<when test='"address".equals(sortType)'>
			 		Address
				</when>
			 	<when test='"createDate".equals(sortType)'>
			 		CreateDate
				</when>
			</choose>
			 
			<choose>
				<when test='"asc".equals(sort)'>
					ASC
				</when>
				<when test='"desc".equals(sort)'>
					DESC
				</when>
			</choose>
		</if>
		
		<!-- paging -->
		LIMIT #{page}, #{limit}
	</select>
	
	<!-- 관리자 Total Count 조회 -->
	<select id="selectOfTotalCount" parameterType="com.dsbath.admin.model.dto.PagingDTO" resultType="long">
		SELECT
			COUNT(AdminIdx)
		  FROM Admin
		  
		  <!-- 공통 조건 -->
		  <include refid="selectOfWhere"></include>
	</select>
	
	
	<!-- 목록 조회 공통 조건 -->
	<sql id="selectOfWhere">
		<where>
		 	<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(model.adminName)'>
		 		<!-- 관리자 이름 -->
		 		AND AdminName LIKE CONCAT('%', TRIM(#{model.adminName}), '%')
		 	</if>
		 	<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(model.adminId)'>
		 		<!-- 관리자 아이디 -->
		 		AND AdminId LIKE CONCAT('%', TRIM(#{model.adminId}), '%')
		 	</if>
		 	<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(model.address)'>
		 		<!-- 관리자 주소 -->
		 		AND Address LIKE CONCAT('%', TRIM(#{model.address}), '%')
		 	</if>
		 	<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(startDateStr) and @com.dsbath.admin.etc.util.StringUtil@isNotEmpty(endDateStr)'>
		 		<!-- 등록일 -->
		 		AND DATE_FORMAT(CreateDate, '%Y%m%d') BETWEEN #{startDateStr} AND #{endDateStr}
		 	</if>
		</where>
	</sql>
	
</mapper>