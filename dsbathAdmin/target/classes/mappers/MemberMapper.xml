<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dsbath.admin.model.mapper.MemberMapper">

	
<!--============== 사용자 목록 START ==============-->
	<select id="select" parameterType="com.dsbath.admin.model.dto.PagingDTO" resultType="member">
		SELECT
			MemberName,	
			MemberId,
			ZipCode,
			Address,
			AddressDetail,
			CreateDate,
			UpdateDate
			
		  FROM Member
		  
		<!-- 공통 조건 -->
		<include refid="selectOfWhere"></include>
		  
		<!-- order -->
		<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(sort) and @com.dsbath.admin.etc.util.StringUtil@isNotEmpty(sortType)'>
		 	ORDER BY
			
			<choose>
				<when test='"memberName".equals(sortType)'>
					MemberName
				</when>
				<when test='"memberId".equals(sortType)'>
					MemberId
				</when>
				<when test='"address".equals(sortType)'>
					address
				</when>
				<when test='"createDate".equals(sortType)'>
					CreateDate
				</when>
			</choose>
			
			<choose>
				<when test='"asc".equals(sort)'>
					ASC
				</when>
				<when test='"desc".equals(sort)'>
					DESC
				</when>
			</choose>
	 	</if>
	 	
		<!-- paging -->
		LIMIT #{page}, #{limit}
	</select>
<!--============== 사용자 목록 END ==============-->


<!--============== 사용자 목록 Total Count START ==============-->
	<select id="selectOfTotalCount" parameterType="com.dsbath.admin.model.dto.PagingDTO" resultType="long">
		SELECT 
			COUNT(MemberIdx)
		  FROM Member
		  
		<!-- 공통 조건 -->
		<include refid="selectOfWhere"></include>
	</select>
<!--============== 사용자 목록 Total Count END ==============-->


<!--============== 사용자 등록 START ==============-->
	<insert id="insert" parameterType="member">
		INSERT INTO Member
		(
			MemberName,
			MemberId,
			Password,
			ZipCode,
			Address,
			AddressDetail,
			IsDelete
		)
		VALUES
		(
			#{memberName},
			#{memberId},
			#{password},
			#{zipCode},
			#{address},
			#{addressDetail},
			'0'
		)
	</insert>
<!--============== 사용자 등록 END ==============-->


<!--============== 사용자 수정 START ==============-->
	<update id="update" parameterType="member">
		UPDATE Member
		   SET
		   		<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(password)'>
			   		Password = #{password},
			   	</if>
			   	
			   	MemberName		= #{memberName},
			   	ZipCode			= #{zipCode},
			   	Address			= #{address},
			   	AddressDetail 	= #{addressDetail}
			   	
		 WHERE MemberIdx = #{memberIdx}
	</update>
<!--============== 사용자 수정 END ==============-->


<!--============== 사용자 삭제 START ==============-->
	<update id="delete" parameterType="member">
		UPDATE Member
		   SET
		   		IsDelete = '1'
		   		
		 WHERE MemberIdx = #{memberIdx}
	</update>
<!--============== 사용자 삭제 END ==============-->


<!--============== 사용자 아이디 중복확인 START ==============-->
	<select id="memberIdChecked" parameterType="member" resultType="member">
		SELECT
			MemberId
		  FROM Member
		 WHERE MemberId = #{memberId}
	</select>
<!--============== 사용자 아이디 중복확인 END ==============-->


<!--============== 목록 조회 공통 조건 START ==============-->
	<sql id="selectOfWhere">
		<where>
			<!-- 탈퇴하지 않은 사용자 조건 -->
			IsDelete = '0'
			
		 	<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(model.memberName)'>
		 		<!-- 사용자 이름 -->
		 		AND MemberName LIKE CONCAT('%', TRIM(#{model.memberName}), '%')
		 	</if>
		 	<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(model.memberId)'>
		 		<!-- 사용자 아이디 -->
		 		AND MemberId LIKE CONCAT('%', TRIM(#{model.memberId}), '%')
		 	</if>
		 	<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(model.address)'>
		 		<!-- 사용자자 주소 -->
		 		AND (
		 				Address LIKE CONCAT('%', TRIM(#{model.address}), '%') OR 
		 				AddressDetail LIKE CONCAT('%', TRIM(#{model.address}), '%')
		 			)
		 	</if>
		 	<if test='@com.dsbath.admin.etc.util.StringUtil@isNotEmpty(startDateStr) and @com.dsbath.admin.etc.util.StringUtil@isNotEmpty(endDateStr)'>
		 		<!-- 등록일 -->
		 		AND DATE_FORMAT(CreateDate, '%Y%m%d') BETWEEN #{startDateStr} AND #{endDateStr}
		 	</if>
		</where>
	</sql>
<!--============== 목록 조회 공통 조건 END ==============-->
</mapper>